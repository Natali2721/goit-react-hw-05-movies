{"version":3,"file":"static/js/387.979cdcde.chunk.js","mappings":"6SACMA,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,GAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,GAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,GAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,GAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,GAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,oIC7BVO,EAAWC,EAAAA,GAAAA,GAAH,6CAGRC,EAAWD,EAAAA,GAAAA,GAAH,0HAKRE,EAAOF,EAAAA,GAAAA,GAAH,0CAGJG,EAAYH,EAAAA,GAAAA,EAAH,sC,SCqBtB,EA7Ba,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBU,GAASG,MAAK,SAAAlB,GAAI,OAAIc,EAAYd,EAAKmB,KAArB,GACnC,GAAE,CAACJ,KAEF,SAACR,EAAD,UACGM,EAASO,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACZ,UAACd,EAAD,YACE,gBACEe,IACEF,EAAY,yCAC0BA,GAD1B,8GAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAAClB,EAAD,UAAOW,KACP,UAACV,EAAD,0BAAwBY,OAbXnB,EADH,KAmBnB,C","sources":["Api/apiService.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  //box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from './../../Api/apiService';\nimport { CastItem, CastList, Character, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCastList(data.cast));\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.map(({ id, name, profile_path, character }) => (\n        <CastItem key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                : `https://thumbs.dreamstime.com/z/no-image-available-icon-photo-camera-flat-vector-illustration-132483141.jpg`\n            }\n            alt=\"actor\"\n            loading=\"lazy\"\n            width={120}\n            height={180}\n          />\n          <Name>{name}</Name>\n          <Character> Character: {character}</Character>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","CastList","styled","CastItem","Name","Character","useState","castList","setCastList","movieId","useParams","useEffect","then","cast","map","name","profile_path","character","src","alt","loading","width","height"],"sourceRoot":""}